// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from layer_gps.djinni

#pragma once

#include "Coord.h"
#include "LayerInterface.h"
#include <memory>
#include <optional>

class GpsLayerCallbackInterface;
enum class GpsMode;
struct GpsStyleInfo;

class GpsLayerInterface {
public:
    virtual ~GpsLayerInterface() = default;

    static /*not-null*/ std::shared_ptr<GpsLayerInterface> create(const GpsStyleInfo & styleInfo);

    virtual void setCallbackHandler(const /*not-null*/ std::shared_ptr<GpsLayerCallbackInterface> & handler) = 0;

    virtual void setMode(GpsMode mode) = 0;

    virtual void setModeWithRotationReset(GpsMode mode, bool resetRotation) = 0;

    virtual void setResetRotationOnMapInteraction(bool resetRotation) = 0;

    virtual GpsMode getMode() = 0;

    virtual void enableHeading(bool enable) = 0;

    virtual void updatePosition(const ::Coord & position, double horizontalAccuracyM) = 0;

    virtual void updateHeading(float angleHeading) = 0;

    virtual void setDrawPoint(bool enable) = 0;

    virtual void setDrawHeading(bool enable) = 0;

    virtual void enablePointRotationInvariant(bool enable) = 0;

    virtual void setFollowInitializeZoom(std::optional<float> zoom) = 0;

    virtual void updateStyle(const GpsStyleInfo & styleInfo) = 0;

    virtual /*not-null*/ std::shared_ptr<::LayerInterface> asLayerInterface() = 0;
};

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from layer_gps.djinni

package io.openmobilemaps.gps.shared.gps

import com.snapchat.djinni.NativeObjectManager
import java.util.concurrent.atomic.AtomicBoolean

abstract class GpsStyleInfoInterface {

    companion object {
        @JvmStatic
        external fun create(pointTexture: io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?, headingTexture: io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?, courseTexture: io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?, accuracyColor: io.openmobilemaps.mapscore.shared.graphics.common.Color): GpsStyleInfoInterface
    }

    abstract fun getPointTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface

    abstract fun getHeadingTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?

    abstract fun getCourseTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?

    abstract fun getAccuracyColor(): io.openmobilemaps.mapscore.shared.graphics.common.Color

    private class CppProxy : GpsStyleInfoInterface {
        private val nativeRef: Long
        private val destroyed: AtomicBoolean = AtomicBoolean(false)

        private constructor(nativeRef: Long) {
            if (nativeRef == 0L) error("nativeRef is zero")
            this.nativeRef = nativeRef
            NativeObjectManager.register(this, nativeRef)
        }

        companion object {
            @JvmStatic
            external fun nativeDestroy(nativeRef: Long)
        }

        override fun getPointTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getPointTexture(this.nativeRef)
        }
        private external fun native_getPointTexture(_nativeRef: Long): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface

        override fun getHeadingTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface? {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getHeadingTexture(this.nativeRef)
        }
        private external fun native_getHeadingTexture(_nativeRef: Long): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?

        override fun getCourseTexture(): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface? {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getCourseTexture(this.nativeRef)
        }
        private external fun native_getCourseTexture(_nativeRef: Long): io.openmobilemaps.mapscore.shared.graphics.objects.TextureHolderInterface?

        override fun getAccuracyColor(): io.openmobilemaps.mapscore.shared.graphics.common.Color {
            assert(!this.destroyed.get()) { error("trying to use a destroyed object") }
            return native_getAccuracyColor(this.nativeRef)
        }
        private external fun native_getAccuracyColor(_nativeRef: Long): io.openmobilemaps.mapscore.shared.graphics.common.Color
    }
}

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from layer_gps.djinni

#include "NativeGpsStyleInfoInterface.h"  // my header
#include "Marshal.hpp"
#include "NativeColor.h"
#include "NativeTextureHolderInterface.h"

namespace djinni_generated {

NativeGpsStyleInfoInterface::NativeGpsStyleInfoInterface() : ::djinni::JniInterface<::GpsStyleInfoInterface, NativeGpsStyleInfoInterface>("io/openmobilemaps/gps/shared/gps/GpsStyleInfoInterface$CppProxy") {}

NativeGpsStyleInfoInterface::~NativeGpsStyleInfoInterface() = default;


CJNIEXPORT void JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::GpsStyleInfoInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_create(JNIEnv* jniEnv, jobject /*this*/, ::djinni_generated::NativeTextureHolderInterface::Boxed::JniType j_pointTexture, ::djinni_generated::NativeTextureHolderInterface::Boxed::JniType j_headingTexture, ::djinni_generated::NativeTextureHolderInterface::Boxed::JniType j_courseTexture, ::djinni_generated::NativeColor::JniType j_accuracyColor)
{
    try {
        auto r = ::GpsStyleInfoInterface::create(::djinni::Optional<std::optional, ::djinni_generated::NativeTextureHolderInterface>::toCpp(jniEnv, j_pointTexture),
                                                 ::djinni::Optional<std::optional, ::djinni_generated::NativeTextureHolderInterface>::toCpp(jniEnv, j_headingTexture),
                                                 ::djinni::Optional<std::optional, ::djinni_generated::NativeTextureHolderInterface>::toCpp(jniEnv, j_courseTexture),
                                                 ::djinni_generated::NativeColor::toCpp(jniEnv, j_accuracyColor));
        return ::djinni::release(::djinni_generated::NativeGpsStyleInfoInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeTextureHolderInterface::JniType JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_00024CppProxy_native_1getPointTexture(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GpsStyleInfoInterface>(nativeRef);
        auto r = ref->getPointTexture();
        return ::djinni::release(::djinni_generated::NativeTextureHolderInterface::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeTextureHolderInterface::Boxed::JniType JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_00024CppProxy_native_1getHeadingTexture(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GpsStyleInfoInterface>(nativeRef);
        auto r = ref->getHeadingTexture();
        return ::djinni::release(::djinni::Optional<std::optional, ::djinni_generated::NativeTextureHolderInterface>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeTextureHolderInterface::Boxed::JniType JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_00024CppProxy_native_1getCourseTexture(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GpsStyleInfoInterface>(nativeRef);
        auto r = ref->getCourseTexture();
        return ::djinni::release(::djinni::Optional<std::optional, ::djinni_generated::NativeTextureHolderInterface>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT ::djinni_generated::NativeColor::JniType JNICALL Java_io_openmobilemaps_gps_shared_gps_GpsStyleInfoInterface_00024CppProxy_native_1getAccuracyColor(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        const auto& ref = ::djinni::objectFromHandleAddress<::GpsStyleInfoInterface>(nativeRef);
        auto r = ref->getAccuracyColor();
        return ::djinni::release(::djinni_generated::NativeColor::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} // namespace djinni_generated
